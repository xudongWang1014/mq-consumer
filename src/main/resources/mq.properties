# rabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.virtual-host=/
spring.rabbitmq.connection-timeout=15000

## 消费者的最小和最大数量
spring.rabbitmq.listener.simple.concurrency=5
spring.rabbitmq.listener.simple.max-concurrency=10

## 每一次发送到消费者的消息数量，它应该大于或等于事务大小（如果使用）。
## simple 和 direct的区别
spring.rabbitmq.listener.direct.prefetch=1
spring.rabbitmq.listener.simple.prefetch=1
# 采用手工应答
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.listener.direct.acknowledge-mode=manual
# 消费者端的重试
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.direct.retry.enabled=true
## 最大重试次数
spring.rabbitmq.listener.simple.retry.max-attempts=5
spring.rabbitmq.listener.direct.retry.max-attempts=5
##  重试间隔时间（单位毫秒）
spring.rabbitmq.listener.simple.retry.initial-interval=3000
spring.rabbitmq.listener.direct.retry.initial-interval=3000
## 重试次数超过上面的设置之后是否丢弃（false不丢弃时需要写相应代码将该消息加入死信队列
spring.rabbitmq.listener.simple.default-requeue-rejected=false
spring.rabbitmq.listener.direct.default-requeue-rejected=false

#确认消息已发送到交换机(Exchange)
#spring.rabbitmq.publisher-confirms=true
#return机制  发送失败退回 , 确认消息已发送到队列(Queue)
#spring.rabbitmq.publisher-returns=true
#设置为 true 后 在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
#spring.rabbitmq.template.mandatory=true




